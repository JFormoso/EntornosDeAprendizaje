---
title: "TRADUCCIÓN Y ADAPTACIÓN DE UN CUESTIONARIO SOBRE ENTORNOS DE APRENDIZAJE DE LAS MATEMÁTICAS EN EL HOGAR"
author: "Jesica Formoso, Sofía Ortiz, Carla Errico"
format: gfm
execute:
  echo: false
  warning: false
  message: false
bibliography: references.bib
csl: apa6.csl
---

```{r setup}


# Packages ----------------------------------------------------------------

library(tidyverse)
library(lubridate)
library(wesanderson)
library(hrbrthemes) 
library(gt)
library(psych)
library(corrplot)
library(car)

# Data --------------------------------------------------------------------

df <- readxl::read_xlsx("Encuesta26052023.xlsx")

variables <- names(df)

names(df) <- c("fecha_toma", "consentimiento", "fecha_nacimiento", "ninio_sexo",
               "ninio_residencia", "ninio_aprendizaje", "ninio_sensoriomotor",
               "adulto_edad", "adulto_genero", "adulto_educativo", "adulto_vinculo",
               "libros_infantiles", "libros_adultos", "conteo", "dif_numletras",
               "imp_contar10", "imp_contar100", "imp_reconocernumeros", "imp_sumas",
               "imp_abc", "imp_reconocerletras", "imp_escribirnombre", "imp_escribirletras", "frec_tarjetas",
               "frec_reconocernumeros", "frec_magnetos", "frec_contar", "frec_ordenar",
               "frec_contaratras", "frec_sumas", "frec_escribirnumeros", "frec_dinero",
               "frec_cocinar", "frec_nombresletras", "frec_sonidoletras", "frec_tiempo",
               "frec_calculadora", "frec_puntos", "frec_calendarios", "frec_reloj", "frec_libronum", 
               "frec_librosnum2", "frec_mesa", "frec_cartas", "frec_escribirletras",
               "frec_bloques", "frec_repartir", "acuerdo_buenomatematicas", 
               "acuerdo_disfrutabamatematicas", "acuerdo_buenolectura", 
               "acuerdo_disfrutabalectura", "acuerdo_trabajomatematicas", "acuerdo_mate",
               "acuerdo_leer", "acuerdo_matediariamente", "acuerdo_leerdiariamente")

df <- df %>% 
  mutate(adulto_vinculo = str_to_lower(adulto_vinculo),
         adulto_vinculo = case_when(str_detect(adulto_vinculo, "madre|mama|mamá") ~ "madre",
                                    str_detect(adulto_vinculo, "padre|papá|papa") ~ "padre",
                                    str_detect(adulto_vinculo, "tia") ~ "tía",
                                    str_detect(adulto_vinculo, "niñera") ~ "niñera",
                                    TRUE ~ as.character(adulto_vinculo))) %>% 
  mutate(adulto_vinculo = str_to_sentence(adulto_vinculo)) %>% 
    mutate(region = case_match(ninio_residencia,
                             c("Chubut", "Neuquén", "Santa Cruz", "Río Negro", "La Pampa") ~ "Patagonia",
                             c("Chaco", "Santa Fe", "Formosa", "Entre Ríos", "Corrientes", "Misiones") ~"Litoral",
                             c("Buenos Aires", "Ciudad Autónoma de Buenos Aires") ~ "Buenos Aires",
                             c("San Luis", "Mendoza") ~ "Cuyo",
                             c("Santiago del Estero") ~ "Región Norte",
                             c("Córdoba") ~"Córdoba"))

df <- df %>% 
  mutate(intervalo = interval(start = format(fecha_nacimiento, "%Y-%m-%d"), end = format(fecha_toma, "%Y-%m-%d")),
         edad_meses = intervalo %/% months(1),
         edad_años = intervalo %/% years(1)) %>% 
  filter(between(edad_meses, 28, 108))

df <- df %>% 
  mutate(intervalo = interval(start = format(fecha_nacimiento, "%Y-%m-%d"), end = format(fecha_toma, "%Y-%m-%d")),
         edad_meses = intervalo %/% months(1),
         edad_años = intervalo %/% years(1)) %>% 
  filter(between(edad_meses, 28, 108))

gen <- df %>% 
  count(adulto_genero) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1))

sex <- df %>% 
  count(ninio_sexo) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1))


df$ninio_aprendizaje <- fct_recode(df$ninio_aprendizaje,
                                             No = "Presentó dificultades de socisbilizacion  de",
                                             Sí = "Problemas en la adquisición del lenguaje (detectadas por la madre-fono)",
                                             Sí = "fonoudiologia")


df$ninio_sensoriomotor <- fct_recode(df$ninio_sensoriomotor,
                                             Sí = "Daltonismo",
                                             Sí = "hipoacusia por liquido en oido medio")

alt <- df %>%
  mutate(ap = case_when(is.na(ninio_aprendizaje) ~ "No", 
                        ninio_aprendizaje == "No" ~ "No",
                        ninio_aprendizaje == "Sí" ~ "Sí")) %>% 
  mutate(sen = case_when(is.na(ninio_sensoriomotor) ~ "No", 
                        ninio_sensoriomotor == "No" ~ "No",
                        ninio_sensoriomotor == "Sí" ~ "Sí")) %>% 
  count(ap, sen) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1))
  

```

## Versión final del cuestionario

Si tienes a tu cuidado niños de entre 3 y 8 años y deseas colaborar contestando la encuesta, puedes acceder a la misma utilizando este link [http://tiny.cc/AprendizajeEnHogar](http://tiny.cc/AprendizajeEnHogar){target="_blank"}

Si, por otro lado, te interesa utilizarla para un trabajo propio, puedes descargar las preguntas completas en el siguiente link: [https://zenodo.org/record/7986289#.ZHYA8HZBzIU](https://zenodo.org/record/7986289#.ZHYA8HZBzIU){target="_blank"}

Para citar el cuestionario validado:
_Formoso, J., Ortiz, S., Errico, C. (2023). Traducción y adaptación de un cuestionario sobre entornos de aprendizaje de las matemáticas en el hogar [Poster]. 3er Congreso Nacional, 1er Congreso Internacional de Psicología de la Facultad de Psicología, Universidad Nacional de San Luis, San Luis, Argentina. Doi: 10.5281/zenodo.7986364_ 

## Introducción

Los niños y niñas cuentan con habilidades matemáticas de aparición temprana desde sus primeros años de vida, como la estimación y discriminación de cantidades, el conteo y el reconocimiento de arábigos.  Estas se encuentran en la base de la adquisición de habilidades más complejas, asociadas tradicionalmente a la educación formal [@kleemans2012child; @purpura2011early]. Sin embargo, diversos estudios sugieren que las experiencias informales desarrolladas en el entorno familiar influyen sobre la adquisición posterior de habilidades matemáticas y, por consiguiente, sobre rendimiento académico [@segers2015role;@lefevre2009home]. La cantidad y calidad de tiempo de interacción entre las personas cuidadoras y los/as niños/as, los recursos materiales utilizados, las expectativas que madres y padres tienen sobre los logros académicos de sus hijos e hijas, pueden influir sobre la generación de aprendizajes significativos. 


### Objetivo del presente trabajo 

Debido a que estudios previos han detectado efectos del contexto hogareño de aprendizaje sobre el desarrollo de las habilidades matemáticas en niños resulta de interés contar con un instrumento adaptado a la población local que permita objetivar la medición de esta variable. Luego de una búsqueda bibliográfica extensa, seleccionamos un cuestionario publicado en LeFevre et al. [-@lefevre2009home]. El mismo fue traducido al español por tres profesionales independientes, luego se realizó una puesta en común y síntesis, se retradujo al inglés y se evaluó la concordancia entre la versión final y la original. Finalmente, se realizó un estudio para evaluar su validez y fiabilidad. A continuación se describe ese proceso. 



![Resumen de la metodología](Metodologia.png)


## Descripción de los participantes

Los siguientes datos corresponden a un cuestionario completado por madres, padres y personas cuidadoras de niños y niñas de entre 3 y 8 años de edad. Los datos fueron recabados entre el `r min(format(df$fecha_toma, "%d/%m/%Y"))` y `r max(format(df$fecha_toma, "%d/%m/%Y"))`. Incluye respuestas de `r nrow(df)` participantes. De las personas cuidadoras el `r gen[1,3][[1]]`% es de género femenino y `r gen[2,3][[1]]`% de género masculino, con una edad promedio de `r round(mean(df$adulto_edad),2)` (DE = `r round(sd(df$adulto_edad),2)`). Sus respuestas correspondieron a `r sex[1,3][[1]]` % de niñas y `r sex[2,3][[1]]` % de niños, con una edad en meses promedio de `r round(mean(df$edad_meses),2)` (DE = `r round(sd(df$edad_meses),2)`). De los niños y niñas sobre los que se respondió el cuestionario, `r alt[2,4][[1]]`% tenían alteraciones sensoriales (daltonismo e hipoacusia) y `r alt[3,4][[1]]`% dificultades del aprendizaje o de adquisición del lenguaje. 


```{r ninios_edad}

# Cantidad de niños por edad
edad_conteo = df %>% 
  count(edad_años) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 

edad_conteo %>% 
  ggplot(aes(x = edad_años, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,25)) +
  labs(title = "Cantidad de niños/as por edad",
       subtitle = "Porcentaje de casos",
       x = "Años",
       y = "") +
  coord_flip() +
  scale_x_continuous(breaks = seq(from = 2, to = 9, by = 1)) +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 

```

```{r residencia}

# Cantidad de niños por edad
edad_conteo = df %>% 
  count(region) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 



edad_conteo %>% 
  ggplot(aes(x = region, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,70)) +
  labs(title = "Cantidad de niños/as por región de residencia",
       subtitle = "Porcentaje de casos",
       x = "",
       y = "") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 

```



```{r vinculo}

# Cantidad de niños por edad
edad_conteo = df %>% 
  count(adulto_vinculo) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 

edad_conteo %>% 
  ggplot(aes(x = adulto_vinculo, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,95)) +
  labs(title = "Vínculo de la persona cuidadora con el niño",
       subtitle = "Porcentaje de casos",
       x = "",
       y = "") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 

```


```{r edu}

# Cantidad de niños por edad
edad_conteo = df %>% 
  count(adulto_educativo) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 

edad_conteo$adulto_educativo <- fct_relevel(edad_conteo$adulto_educativo, "Secundario incompleto", "Secundario completo", "Terciario o universitario incompleto", "Terciario o universitario completo")

edad_conteo %>% 
  ggplot(aes(x = adulto_educativo, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,95)) +
  labs(title = "Nivel educativo de la persona cuidadora",
       subtitle = "Porcentaje de casos",
       x = "",
       y = "") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 

```


## Descripción de las respuestas a los ítems

```{r libros_adultos}

df <- df %>%
  mutate(libros_adultos = str_remove(libros_adultos, "\\+")) %>% 
  mutate(libros_adultos = as.numeric(libros_adultos)) %>% 
  mutate(libros_adultos_cat = case_when(between(libros_adultos, 0, 10) ~ "10 o menos",
                                      between(libros_adultos, 11, 20) ~ "11 a 20",
                                      between(libros_adultos, 21, 50) ~ "21 a 50",
                                      between(libros_adultos, 51, 100) ~ "51 a 100",
                                      between(libros_adultos, 101, 200) ~ "101 a 200",
                                      libros_adultos > 200 ~ "Más de 200")) 


edad_conteo = df %>% 
  count(libros_adultos_cat) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 

edad_conteo$libros_adultos_cat <- fct_relevel(edad_conteo$libros_adultos_cat, "10 o menos", "11 a 20", "21 a 50", "51 a 100", "101 a 200", "Más de 200")

edad_conteo %>% 
  ggplot(aes(x = libros_adultos_cat, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,30)) +
  labs(title = "Cantidad de libros de adultos en el hogar",
       subtitle = "Porcentaje de casos",
       x = "",
       y = "") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 



```

```{r libros_ninios}

df <- df %>%
  mutate(libros_infantiles = str_remove(libros_infantiles, "\\+")) %>% 
  mutate(libros_infantiles = as.numeric(libros_infantiles)) %>% 
  mutate(libros_infantiles_cat = case_when(between(libros_infantiles, 0, 10) ~ "10 o menos",
                                      between(libros_infantiles, 11, 20) ~ "11 a 20",
                                      between(libros_infantiles, 21, 40) ~ "21 a 40",
                                      between(libros_infantiles, 41, 60) ~ "41 a 60",
                                      libros_infantiles > 60 ~ "Más de 60")) 


edad_conteo = df %>% 
  count(libros_infantiles_cat) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1)) 

edad_conteo$libros_infantiles_cat <- fct_relevel(edad_conteo$libros_infantiles_cat, "10 o menos", "11 a 20", "21 a 40", "41 a 60", "Más de 60")

edad_conteo %>% 
  ggplot(aes(x = libros_infantiles_cat, y = porcentaje)) + 
  geom_col(fill = 'royalblue4') +
  geom_text(aes(label = paste0(porcentaje, "%")), hjust = -0.2, color = "black", size = 3.8) +
  scale_y_continuous(expand = c(0, 0), limits = c(0,37)) +
  labs(title = "Cantidad de libros infantiles en el hogar",
       subtitle = "Porcentaje de casos",
       x = "",
       y = "") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) 



```

```{r conteo}


df <- df %>%
  mutate(conteo = str_remove(conteo, "\\+")) %>% 
  mutate(conteo = as.numeric(conteo)) %>% 
  mutate(conteo_cat = case_when(between(conteo, 0, 10) ~ "10 o menos",
                                      between(conteo, 11, 20) ~ "11 a 20",
                                      between(conteo, 21, 50) ~ "21 a 50",
                                      between(conteo, 51, 100) ~ "51 a 100",
                                between(conteo, 101, 200) ~ "101 a 200",
                                between(conteo, 201, 1000) ~ "201 a 1000",
                                      conteo > 1000 ~ "Más de 1000")) 


edad_conteo = df %>% 
  count(edad_años, conteo_cat) %>% 
  group_by(edad_años) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1))

edad_conteo$conteo_cat <- fct_relevel(edad_conteo$conteo_cat, "10 o menos", "11 a 20", "21 a 50", "51 a 100", "101 a 200", "201 a 1000", "Más de 1000")

edad_conteo %>% 
  ggplot(aes(x = edad_años, y = porcentaje, fill = conteo_cat)) + 
  geom_col() +
  scale_y_continuous(expand = c(0, 0), limits = c(0,102)) +
  scale_x_continuous(breaks = seq(from = 2, to = 9, by = 1)) +
  labs(title = "¿Hasta qué número sabe contar el niño o la niña?",
       subtitle = "Porcentaje de casos según edad",
       x = "Edad en años",
       y = "Frecuencia %",
       fill = "Rango de conteo") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) +
  scale_fill_manual(values = c("#d9d9a0", "#a7d989", "#5fb876", "#309c5f","#198585", "#044a69", "#051239"))



```
```{r dinumletras}




edad_conteo = df %>% 
  count(edad_años, dif_numletras) %>% 
  group_by(edad_años) %>% 
  mutate(porcentaje = round(n/sum(n)*100, 1))


edad_conteo %>% 
  ggplot(aes(x = edad_años, y = porcentaje, fill = dif_numletras)) + 
  geom_col() +
  scale_y_continuous(expand = c(0, 0), limits = c(0,102)) +
  scale_x_continuous(breaks = seq(from = 2, to = 9, by = 1)) +
  labs(title = "¿El/la niño/a distingue números de letras?",
       subtitle = "Porcentaje de casos según edad",
       x = "Edad en años",
       y = "Frecuencia %",
       fill = "Distingue números\nde letras") +
  coord_flip() +
  theme(
    plot.title = element_text(size = 18, margin = margin(10, 0, 0, 0)),
    plot.subtitle = element_text(size = 12, margin = margin(10, 0, 30, 0), color = "#444343"),
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) +
  scale_fill_manual(values = c("#198585", "#051239"))



```

### En tu opinión, ¿qué tan importante considerás que es para un niño alcanzar los siguientes objetivos antes de ingresar al sala de 4 en el jardín? 


```{r importancia}
#| fig-height: 11
#| fig-width: 10
#| fig-dpi: 400

plot <- df %>% 
  pivot_longer(cols = starts_with("imp_"),
               names_to = "Habilidad",
               values_to = "Frecuencia") %>% 
  count(Habilidad, Frecuencia) %>%
  mutate(por = n/nrow(df)*100) %>% 
  mutate(Frecuencia = fct_relevel(Frecuencia, "No es importante", "Es un poco importante", "Es medianamente importante", "Es importante", "Es muy importante")) %>% 
  mutate(Habilidad = fct_recode(Habilidad, "Decir el abecedario completo" = "imp_abc",
                                "Contar hasta 10" = "imp_contar10",
                                "Contar hasta 100" = "imp_contar100",
                                "Reconocer números escritos" = "imp_reconocernumeros",
                                "Realizar sumar simples" = "imp_sumas",
                                "Reconocer algunas letras" = "imp_reconocerletras",
                                "Escribir algunas letras" = "imp_escribirletras",
                                "Escribir su nombre" = "imp_escribirnombre"))

plot %>% 
  ggplot(aes(Frecuencia, por)) +
  geom_col(fill = 'royalblue4') +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "",
       y = "") +
  coord_flip() +
  theme(
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) +
  facet_wrap(. ~ Habilidad, labeller = label_wrap_gen(), scales = "free_x", ncol = 2)

```


### En el mes pasado, ¿con qué frecuencia realizaron las siguientes actividades vos y el/la niño/a?


```{r Frecuencia}
#| fig-height: 30
#| fig-width: 10
#| fig-dpi: 400



plot <- df %>% 
  pivot_longer(cols = starts_with("frec_"),
               names_to = "Actividad",
               values_to = "Frecuencia") %>% 
  count(Actividad, Frecuencia) %>%
  mutate(por = n/nrow(df)*100) %>% 
  mutate(Frecuencia = fct_relevel(Frecuencia, "Nunca", "2 a 3 veces por mes", "1 vez por semana", "2 a 4 veces por semana", "Casi todos los días", "No sabe")) %>% 
  mutate(Actividad = fct_recode(Actividad, 
                                "Construir con bloques" = "frec_bloques",
                                "Jugar con el celular o la calculadora para hacer cuentas" = "frec_calculadora",			
                                "Usar calendarios y fechas" = "frec_calendarios",			
                                "Jugar juegos de cartas" = "frec_cartas",			
                                "Medir ingredientes mientras cocinan" = "frec_cocinar",			
                                "Contar objetos" = "frec_contar",			
                                "Contar hacia atrás (10, 9, 8, 7…)" = "frec_contaratras",			
                                "Hablar de dinero mientras hacen las compras" = "frec_dinero",			
                                "Escribir letras" = "frec_escribirletras",			
                                "Escribir números" = "frec_escribirnumeros",
                                "Usar libros de actividades numéricas" = "frec_libronum",		
                                "Leer libros de historias con números" = "frec_librosnum2",		
                                "Jugar con números magnéticos de heladera o pizarra" = "frec_magnetos",			                                "Jugar juegos de mesa con dados y casilleros" = "frec_mesa",			
                                "Identificar los nombres de letras escritas" = "frec_nombresletras",			
                                "Ordenar o agrupar objetos por tamaño, color o forma" = "frec_ordenar",			                                "Actividades de unir con puntos" = "frec_puntos",			
                                "Identificar los nombres de números escritos" = "frec_reconocernumeros",			                              "Usar o jugar con un reloj" = "frec_reloj",			
                                "Actividades donde tenga que repartir cosas" = "frec_repartir",
                                "Identificar los sonidos de letras escritas" = "frec_sonidoletras",			
                                "Hacer sumas simples (por ejemplo, 2 + 2 = 4)" = "frec_sumas",			
                                "Jugar con tarjetas con números o cartas" = "frec_tarjetas",			
                                "Jugar a juegos por tiempo" = "frec_tiempo"
                                ))

plot %>% 
  ggplot(aes(Frecuencia, por)) +
  geom_col(fill = 'royalblue4') +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "",
       y = "") +
  coord_flip() +
  theme(
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) +
  facet_wrap(. ~ Actividad, labeller = label_wrap_gen(), scales = "free_x", ncol = 2)

```


### Por favor, leé las siguientes afirmaciones e indicá el grado en que estás de acuerdo con cada afirmación marcando la opción correspondiente.


```{r acuerdo}
#| fig-height: 17
#| fig-width: 10
#| fig-dpi: 400



plot <- df %>% 
  pivot_longer(cols = starts_with("acuerdo_"),
               names_to = "Actividad",
               values_to = "Frecuencia") %>% 
  count(Actividad, Frecuencia) %>%
  mutate(por = n/nrow(df)*100) %>% 
  mutate(Frecuencia = fct_relevel(Frecuencia, "Totalmente en desacuerdo", "En desacuerdo", "Ni de acuerdo, ni en desacuerdo", "De acuerdo", "Totalmente de acuerdo")) %>% 
  mutate(Actividad = fct_recode(Actividad, 
                                "Cuando iba a la escuela, era bueno/a en matemáticas" = "acuerdo_buenomatematicas", 
                                "Cuando iba a la escuela, disfrutaba las matemáticas" = "acuerdo_disfrutabamatematicas", 
                                "Cuando iba a la escuela, era bueno en actividades de lengua y literatura" = "acuerdo_buenolectura", 
                                "Cuando iba a la escuela, disfrutaba las actividades de lengua y literatura" = "acuerdo_disfrutabalectura", 
                                "Mi trabajo está relacionado con las matemáticas" = "acuerdo_trabajomatematicas", 
                               "Disfruto de realizar actividades matemáticas" = "acuerdo_mate", 
                                "Disfruto de leer" = "acuerdo_leer", 
                               "Considero que es importante exponer a al/la niño/a a conceptos matemáticos" = "acuerdo_matediariamente", 
                               "Considero que es importante leerle al/la niño/a" = "acuerdo_leerdiariamente"))

plot %>% 
  ggplot(aes(Frecuencia, por)) +
  geom_col(fill = 'royalblue4') +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "",
       y = "") +
  coord_flip() +
  theme(
    panel.background = element_rect(fill = NA),
    panel.grid.major = element_blank(),
    text = element_text(size = 14)
  ) +
  facet_wrap(. ~ Actividad, labeller = label_wrap_gen(), scales = "free_x", ncol = 2)

```
## Validez y fiabilidad

### Validez de contenido por juicio de expertos

Se constituyó un panel de 3 expertas en la temática con 25 años de experiencia en promedio para evaluar la validez de contenido de la versión descrita previamente, resultado de la traducción y adaptación de los ítems. Para ello, cada una respondió un cuestionario en el que debían puntuar la claridad, relevancia y coherencia de cada ítem y la suficiencia del conjunto de ítems para describir el constructo utilizando una escala Likert de 4 puntos (1. No cumple con el criterio, 2. Nivel bajo, 3. Nivel moderado, 4. Nivel alto).
Se realizaron dos iteraciones. En la primera, se evaluaron el nivel de acuerdo entre las expertas utilizando el coeficiente AC1 de Gwet. Se modificaron aquellos ítems con un nivel bajo de acuerdo (0.67 o menor) y/o con puntajes bajos de coherencia, claridad o relevancia (puntaje 1 o 2). Se agregaron ítems sugeridos por las expertas para alcanzar un nivel de suficiencia alta. En la segunda iteración, la versión final del cuestionario obtuvo niveles de acuerdo altos y puntajes moderados o altos para todas las medidas de calidad. Se calculó un índice de validez de contenido de 1 (100%) [@yusoff2019cv]. 

### Validez aparente

Para evaluar la validez aparente se administró la versión final a un grupo de 10 personas cuidadoras de niños o niñas de entre 3 y 8 años que asignaron puntajes de 1 o 0 a cada uno de los ítems para indicar si estos resultaban claros y comprensibles. Se realizó una entrevista final para evacuar posibles dudas. Se calculó un índice de validez aparente total de 0.98 [@yusoff2019fv], donde los índices asociados a los ítem se encuentran entre 0.70 y 1.


### Validez de constructo con análisis factorial exploratorio

Inicialmente, se obtuvo la matríz de correlaciones entre los ítems de la escala (coeficiente de Spearman).  


```{r corr}
#| fig-height: 15
#| fig-width: 15
#| fig-dpi: 400

df <- df %>%
  mutate(libros_adultos_d = case_when(between(libros_adultos, 0, 10) ~ 1,  between(libros_adultos, 11, 20) ~ 2,  between(libros_adultos, 21, 50) ~ 3,  between(libros_adultos, 51, 100) ~ 4,
between(libros_adultos, 101, 200) ~ 5,  libros_adultos > 200 ~ 6)) 

df <- df %>%
  mutate(conteo_d = case_when(between(conteo, 0, 10) ~ 1,
                                      between(conteo, 11, 20) ~ 2,
                                      between(conteo, 21, 50) ~ 3,
                                      between(conteo, 51, 100) ~ 4,
                                between(conteo, 101, 200) ~ 5,
                                between(conteo, 201, 1000) ~ 6,
                                      conteo > 1000 ~ 7)) 

df <- df %>%
  mutate(libros_infantiles_d = case_when(between(libros_infantiles, 0, 20) ~ 1, between(libros_infantiles, 21, 30) ~ 2, between(libros_infantiles, 31, 40) ~ 3, between(libros_infantiles, 41, 60) ~ 4, libros_infantiles > 60 ~ 5))

# Importancia

df2 <- df %>% 
  mutate(across(imp_contar10:imp_escribirletras, ~ case_when(. == "Es importante" ~ 4,
                                                             . == "Es medianamente importante" ~ 3,
                                                             . == "Es muy importante" ~ 5,
                                                             . == "Es un poco importante" ~ 2,
                                                             . == "No es importante" ~ 1)))
  
# Frecuencia


df2 <- df2 %>% 
  mutate(across(frec_tarjetas:frec_repartir, ~ case_when(. == "2 a 4 veces por semana" ~ 4,
                                                             . == "1 vez por semana" ~ 3,
                                                             . == "Casi todos los días" ~ 5,
                                                             . == "2 a 3 veces por mes" ~ 2,
                                                             . == "Nunca" ~ 1,
                                                             . == "No sabe" ~ 0))) 


# Acuerdo

df2 <- df2 %>% 
  mutate(across(acuerdo_buenomatematicas:acuerdo_leerdiariamente, ~ case_when(. == "De acuerdo" ~ 4,
                                                                              . == "Ni de acuerdo, ni en desacuerdo" ~ 3,
                                                                              . == "Totalmente de acuerdo" ~ 5,
                                                                              . == "En desacuerdo" ~ 2,
                                                                              . == "Totalmente en desacuerdo" ~ 1))) 


df2 <- df2 %>% 
  mutate(dif_numletras = ifelse(dif_numletras == "No", 0, 1))




escala <- df2 %>% 
  select(imp_contar10:acuerdo_leerdiariamente, libros_infantiles, libros_adultos, conteo, dif_numletras)


datamatrix <- cor(escala, method = "spearman")
corrplot(datamatrix, method="number")




```


```{r jmo}

kmo <- KMO(r=cor(escala, method = "spearman"))
kmo <- round(kmo$MSA,2)

b <- cortest.bartlett(escala)
chi <- b$chisq
p <- b$p.value
df <- b$df

```

Para evaluar la adecuación de un análisis factorial, se calculó la medida de adecuación muestral Kaiser-Mayer-Olkin (KMO) (kmo) y la prueba de esfericidad de Bartlett $\chi^2_{`r df`}$ = `r round(chi,2)`, p < .001. En ambos casos los resultados sugieren que los datos son adecuados para realizar un análisis factorial.   

Luego, para identificar la cantidad de factores a extraer, se realizó un análisis paralelo.  

```{r para}

a <- fa.parallel(escala)

```

Puede observarse que hay un punto de inflexión en los datos a partir de 4 o 5 componentes. El resultado de 4 factores mostró un mejor ajuste a los datos por lo que retuvimos finalmente esta solución. Se utilizó como método de rotación varimax, y mínimo residuo como método de estimación. Se eliminaron aquellos ítems con cargas factoriales menores a 0.40 o que carguen en más de un factor, estos son:

- Cantidad de libros de adultos disponibles en el hogar. 
- Cantidad de libros infantiles disponibles en el hogar. 
- Si el/la niño/a diferencia números de letras. 
- Frecuencia con que la persona cuidadora y el/la niño/a juegan con bloques. 
- Frecuencia con que la persona cuidadora y el/la niño/a juegan con números magnéticos. 
- El nivel de acuerdo de la persona cuidadora con la necesidad de practicar matemáticas en el hogar cotidianamente. 


A continuación se muestran las cargas factoriales para cada ítem y la proporción de varianza explicada por cada factor en la versión final del cuestionario. 

```{r AFE}

rotacion = "varimax"
fm = "minres"


fit <- fa(escala, nfactors = 4, n.iter = 100, rotate = rotacion, fm = fm)

escala <- escala %>% 
  select(-libros_infantiles, -libros_adultos, -conteo, -dif_numletras, -frec_bloques, -frec_magnetos, -acuerdo_matediariamente)

fit <- fa(escala, nfactors = 4, n.iter = 100, rotate = rotacion, fm = fm)


loadings <- data.frame(round(unclass(print(fit$loadings, cut = .4)), 2))




```


## Referencias

::: {#refs}
:::